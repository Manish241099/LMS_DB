CREATE DATABASE LMSDB;
SHOW DATABASES;
USE LMSDB;
create table user_details (
id int auto_increment primary key ,
email varchar(255),
first_name varchar(255),
last_name varchar(255),
password varchar(255),
contact varchar(255),
verified varchar(255),
creator_stamp varchar(255),
creater_user varchar(255)
 );

create table user_details (
id int auto_increment primary key ,
email varchar(255),
first_name varchar(255),
last_name varchar(255),
password varchar(255),
contact varchar(255),
verified varchar(255),
creator_stamp varchar(255),
creater_user varchar(255)
 );

CREATE TABLE hired_candidate (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255),
    first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    hired_city VARCHAR(255),
    degree VARCHAR(255),  
    hired_date DATE,
    mobile_number VARCHAR(255),
    permanent_number VARCHAR(255),  
    hired_lab VARCHAR(255),
    attitude VARCHAR(255),  
    communication_remark VARCHAR(255),
    knowledge_remark VARCHAR(255),
    aggregate_remark VARCHAR(255),
    status VARCHAR(255),
    creator_stamp DATETIME,
    creator_user INT,  
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);


CREATE TABLE Fellowship_Candidate (
    Id INT AUTO_INCREMENT PRIMARY KEY,
    CIC_ID VARCHAR(255),
    First_Name VARCHAR(255),
    Middle_Name VARCHAR(255),
    Last_Name VARCHAR(255),
    EmailId VARCHAR(255),
    Hired_City VARCHAR(255),
    Degree VARCHAR(255),
    Hired_Date DATE,
    Mobile_Number VARCHAR(255),
    Permanent_Pincode VARCHAR(255),
    Hired_Lab VARCHAR(255),
    Attitude VARCHAR(255),
    Communication_Remark VARCHAR(255),
    Knowledge_Remark VARCHAR(255),
    Aggregate_Remark VARCHAR(255),
    Creator_Stamp DATETIME,
    Creator_User VARCHAR(255),
    Birth_Date DATE,
    Is_Birth_Date_Verified VARCHAR(255),
    Parent_Name VARCHAR(255),
    Parent_Occupation VARCHAR(255),
    Parents_Mobile_Number VARCHAR(255),
    Parents_Annual_Salary VARCHAR(255),
    Local_Address TEXT,
    Permanent_Address TEXT,
    Photo_Path VARCHAR(255),
    Joining_Date DATE,
    Candidate_Status VARCHAR(255),
    Personal_Information TEXT,
    Bank_Information TEXT,
    Educational_Information TEXT,
    Document_Status TEXT,
    Remark TEXT,
    foreign key(id) references hired_candidate(id)
);

CREATE TABLE candidate_bank_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    candidate_id INT,
    name VARCHAR(255),
    account_number VARCHAR(255),
    is_account_num_verified VARCHAR(255),
    ifsc_code VARCHAR(255),
    is_ifsc_code_verified VARCHAR(255),
    pan_number VARCHAR(255),
    is_pan_number_verified VARCHAR(255),
    aadhaar_num VARCHAR(255),
    is_aadhaar_num_verified VARCHAR(255),
    creator_stamp VARCHAR(255),
    creator_user INT(255),
    foreign key (Candidate_Id) references Fellowship_Candidate(Id),
    foreign key (creator_User) references user_details(id)
    
);
CREATE TABLE candidate_qualification (
    id INT AUTO_INCREMENT PRIMARY KEY,
    candidate_id INT,
    diploma VARCHAR(255),
    degree_name VARCHAR(255),
    is_degree_name_verified VARCHAR(255),
    employee_discipline VARCHAR(255),
    is_employee_discipline_verified VARCHAR(255),
    passing_year INT,
    is_passing_year_verified VARCHAR(255),
    aggr_per DECIMAL(5, 2),
    is_aggr_per_verified VARCHAR(255),
    final_year_per DECIMAL(5, 2),
    is_final_year_per_verified VARCHAR(255),
    training_institute VARCHAR(255),
    is_training_institute_verified VARCHAR(255),
    training_duration_month INT,
    is_training_duration_month_verified VARCHAR(255),
    other_training VARCHAR(255),
    is_other_training_verified VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (candidate_id) REFERENCES fellowship_candidate(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE candidate_documents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    candidate_id INT,
    doc_type VARCHAR(255),
    doc_path VARCHAR(255),
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (candidate_id) REFERENCES fellowship_candidate(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE company (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    address VARCHAR(255),
    location VARCHAR(255),
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    UNIQUE KEY unique_name (name), 
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE tech_stack (
    id INT AUTO_INCREMENT PRIMARY KEY,
    tech_name VARCHAR(255),
    image_path VARCHAR(255),
    framework VARCHAR(255),
    cur_status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    UNIQUE KEY unique_tech_name (tech_name), 
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE tech_type (
    id INT AUTO_INCREMENT PRIMARY KEY,
    type_name VARCHAR(255),
    cur_status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    UNIQUE KEY unique_type_name (type_name), 
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE maker_program (
    id INT AUTO_INCREMENT PRIMARY KEY,
    program_name VARCHAR(255),
    program_type VARCHAR(255),
    program_link VARCHAR(255),
    tech_stack_id INT,
    tech_type_id INT,
    is_program_approved VARCHAR(255),
    description TEXT,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (tech_stack_id) REFERENCES tech_stack(id),
    FOREIGN KEY (tech_type_id) REFERENCES tech_type(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE lab (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    location VARCHAR(255),
    address VARCHAR(255),
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    UNIQUE KEY unique_name_location (name, location), 
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE mentor (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    mentor_type VARCHAR(255),
    lab_id INT,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (lab_id) REFERENCES lab(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE mentor_tech_stack (
    id INT AUTO_INCREMENT PRIMARY KEY,
    mentor_id INT,
    tech_stack_id INT,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (mentor_id) REFERENCES mentor(id),
    FOREIGN KEY (tech_stack_id) REFERENCES tech_stack(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);

CREATE TABLE mentor_ideation_map (
    id INT AUTO_INCREMENT PRIMARY KEY,
    parent_mentor_id INT,
    mentor_id INT,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (parent_mentor_id) REFERENCES mentor(id),
    FOREIGN KEY (mentor_id) REFERENCES mentor(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE lab_threshold (
    id INT AUTO_INCREMENT PRIMARY KEY,
    lab_id INT,
    lab_capacity INT,
    lead_threshold INT,
    ideation_engg_threshold INT,
    buddy_engg_threshold INT,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (lab_id) REFERENCES lab(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);

CREATE TABLE company_requirement (
    id INT AUTO_INCREMENT PRIMARY KEY,
    company_id INT,
    requested_month VARCHAR(255),
    city VARCHAR(255),
    is_doc_verification VARCHAR(255),
    requirement_doc_path VARCHAR(255),
    no_of_engg INT,
    tech_stack_id INT,
    tech_type_id INT,
    maker_program_id INT,
    lead_id INT,
    ideation_engg_id INT,
    buddy_engg_id INT,
    special_remark TEXT,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (company_id) REFERENCES company(id),
    FOREIGN KEY (tech_stack_id) REFERENCES tech_stack(id),
    FOREIGN KEY (tech_type_id) REFERENCES tech_type(id),
    FOREIGN KEY (maker_program_id) REFERENCES maker_program(id),
    FOREIGN KEY (lead_id) REFERENCES mentor(id),
    FOREIGN KEY (ideation_engg_id) REFERENCES mentor(id),
    FOREIGN KEY (buddy_engg_id) REFERENCES mentor(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE app_parameters (
    id INT AUTO_INCREMENT PRIMARY KEY,
    key_type VARCHAR(255),
    key_value VARCHAR(255),
    key_text TEXT,
    cur_status VARCHAR(255),
    lastupd_user INT,
    lastupd_stamp TIMESTAMP,
    creator_stamp TIMESTAMP,
    creator_user INT,
    seq_num INT,
    UNIQUE KEY unique_key_type_value (key_type, key_value),
    FOREIGN KEY (lastupd_user) REFERENCES user_details(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);
CREATE TABLE candidate_stack_assignment (
    id INT AUTO_INCREMENT PRIMARY KEY,
    requirement_id INT,
    candidate_id INT,
    assign_date DATE,
    complete_date DATE,
    status VARCHAR(255),
    creator_stamp TIMESTAMP,
    creator_user INT,
    FOREIGN KEY (requirement_id) REFERENCES company_requirement(id),
    FOREIGN KEY (candidate_id) REFERENCES fellowship_candidate(id),
    FOREIGN KEY (creator_user) REFERENCES user_details(id)
);


show tables;

-------- find all candidate having java technology ----------
mysql> SELECT Hired_Candidate.*,tech_stack.Tech_Name FROM Hired_Candidate
    -> LEFT JOIN Tech_Stack
    -> ON Hired_Candidate.Creator_User = tech_stack.Creator_User
    -> WHERE tech_stack.Tech_Name = "java";
+----+------------+-------------+-----------+--------------------------+------------+--------+------------+---------------+-------------------+-----------+----------+----------------------+------------------+------------------+----------+---------------------+--------------+-----------+
| Id | First_Name | Middle_Name | Last_Name | Email_Id                 | Hired_City | Degree | Hired_Date | Mobile_Number | Permanent_Pincode | Hired_Lab | Attitude | Communication_Remark | Knowledge_Remark | Aggregate_Remark | Status   | Creator_Stamp       | Creator_User | Tech_Name |
+----+------------+-------------+-----------+--------------------------+------------+--------+------------+---------------+-------------------+-----------+----------+----------------------+------------------+------------------+----------+---------------------+--------------+-----------+
|  1 | Anjali     | Ananda      | Patil     | anjalipatil@gmail.com    | Mumbai     | BE-IT  | 2024-04-02 | 8108654596    | 623458            | Mumbai    | Positive | Good                 | Good             | Good             | Accepted | 2024-07-15 16:04:24 |            1 | Java      |
|  2 | Sakshi     | Shankar     | Jadhav    | sakshijadhav@gmail.com   | Mumbai     | BE-IT  | 2024-05-12 | 9178654596    | 785412            | Mumbai    | Positive | Excellent            | Excellent        | Excellent        | Accepted | 2024-07-15 16:04:24 |            2 | Java      |
|  4 | Vedant     | Abcd        | Gujarati  | vedantgujarati@gmail.com | Mumbai     | BE-CS  | 2023-06-14 | 7098325648    | 623462            | Mumbai    | Positive | Excellent            | Excellent        | Excellent        | Accepted | 2024-07-15 16:04:24 |            4 | Java      |
|  5 | Vaibhav    | Abcd        | Kumbhar   | vaibhav15@gmail.com      | Mumbai     | BE-CS  | 2024-01-01 | 7078451296    | 400065            | Mumbai    | Average  | Good                 | Good             | Good             | Accepted | 2024-07-15 16:04:24 |            5 | Java      |
|  9 | Akash      | Ananda      | Patil     | akash@gmail.com          | Mumbai     | BSC-CS | 2024-04-15 | 9857423899    | 400100            | Mumbai    | Positive | Good                 | Excellent        | Good             | Accepted | 2024-07-15 16:04:24 |            9 | Java      |
+----+------------+-------------+-----------+--------------------------+------------+--------+------------+---------------+-------------------+-----------+----------+----------------------+------------------+------------------+----------+---------------------+--------------+-----------+
5 rows in set (0.00 sec)





------- find all mentors and ideations have java technology ---------
mysql> SELECT mentor.Name,mentor.Mentor_Type,tech_stack.Tech_Name FROM mentor
    -> LEFT JOIN tech_stack
    -> ON mentor.Creator_User = tech_stack.Creator_User
    -> WHERE tech_stack.Tech_Name = "Java";
+-----------+--------------------+-----------+
| Name      | Mentor_Type        | Tech_Name |
+-----------+--------------------+-----------+
| Sunil     | Lead/Practice head | Java      |
| Venkat    | Support Mentor     | Java      |
| Aishwarya | Buddy Mentor       | Java      |
| Gunjan    | Lead/Practice head | Java      |
| Roshni    | Support Mentor     | Java      |
+-----------+--------------------+-----------+
5 rows in set (0.00 sec)





------ find name of candidate which did not assign technology ----------
mysql> SELECT hired_candidate.First_Name,hired_candidate.Last_Name,tech_stack.Tech_Name FROM hired_candidate
    -> LEFT JOIN tech_stack
    -> ON hired_candidate.Creator_User = tech_stack.Creator_User
    -> WHERE tech_stack.Tech_Name = " ";
Empty set (0.00 sec)





------- find name of candidate which is not submit documents------------ 
mysql> SELECT hired_candidate.First_Name,hired_candidate.Last_Name,candidate_documents.Status FROM hired_candidate
    -> LEFT JOIN candidate_documents
    -> ON hired_candidate.Creator_User = candidate_documents.Creator_User
    -> WHERE candidate_documents.Status = "Pending";
Empty set (0.00 sec)




------- find name of candidate which is not submit bank details --------- 
SELECT hired_candidate.First_Name,hired_candidate.Last_Name,candidate_bank_details.Candidate_Id FROM hired_candidate
LEFT JOIN candidate_bank_details
ON hired_candidate.Creator_User = candidate_bank_details.Creator_User
WHERE candidate_bank_details.Account_Number = " " And candidate_bank_details.Ifsc_Code = " ";
Empty set (0.00 sec)




------ find name of candidates which is joined in dec month ------
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Middle_Name,fellowship_candidate.Last_Name FROM fellowship_candidate
    -> WHERE MONTH(fellowship_candidate.Hired_Date) = 12;
+------------+-------------+-----------+
| First_Name | Middle_Name | Last_Name |
+------------+-------------+-----------+
| Pranali    | Abcd        | Deware    |
+------------+-------------+-----------+
1 row in set (0.03 sec)





------- find name of candidates which is end of couse in feb -------- 
SELECT fellowship_candidate.First_Name,fellowship_candidate.Middle_Name,fellowship_candidate.Last_Name FROM fellowship_candidate
WHERE MONTH(DATE_ADD(fellowship_candidate.Hired_Date,INTERVAL 3 MONTH))=2;
Empty set (0.00 sec)




-- find name of candidates which is ending date accounding to joining date if joining date is 22-02-2019 -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Middle_Name,fellowship_candidate.Last_Name,fellowship_candidate.Hired_Date FROM fellowship_candidate
    -> WHERE MONTH(DATE_ADD(fellowship_candidate.Hired_Date,INTERVAL 3 MONTH)) = '2019-02-22';
Empty set, 1 warning (0.03 sec)




----- find all candidates which is passed out in 2019 year -------
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Middle_Name,fellowship_candidate.Last_Name,Candidate_Qualification.Passing_Year FROM fellowship_candidate
    -> LEFT JOIN candidate_qualification
    -> ON fellowship_candidate.Creator_User = candidate_qualification.Creator_User
    -> WHERE candidate_qualification.Passing_Year = 2019;
Empty set (0.00 sec)



----- which technology assign to which candidates which is having MCA background -------
mysql> SELECT hired_candidate.First_Name,hired_candidate.Middle_Name,hired_candidate.Last_Name,hired_candidate.Degree,tech_stack.Tech_Name FROM hired_candidate
    -> LEFT JOIN tech_stack
    -> ON hired_candidate.Creator_User = tech_stack.Creator_User
    -> WHERE hired_candidate.Degree = "MCA";
+------------+-------------+-----------+--------+-----------+
| First_Name | Middle_Name | Last_Name | Degree | Tech_Name |
+------------+-------------+-----------+--------+-----------+
| Pranali    | Abcd        | Deware    | MCA    | SQL       |
+------------+-------------+-----------+--------+-----------+
1 row in set (0.00 sec)



-- how many candiates which is having last month -- 
mysql> SELECT COUNT(fellowship_candidate.First_Name) AS Last_Month_Count
    -> FROM fellowship_candidate
    -> WHERE DATE_ADD(fellowship_candidate.Hired_Date, INTERVAL 3 MONTH)
    -> BETWEEN '2024-05-01' AND '2024-06-30';
+------------------+
| Last_Month_Count |
+------------------+
|                3 |
+------------------+
1 row in set (0.04 sec)



-- how many week candidate completed in the bridgelabz since joining date candidate id is 2 -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name,fellowship_candidate.Hired_Date,FLOOR(DATEDIFF(CURDATE(),fellowship_candidate.Hired_Date)/7) AS Completed_Weeks
    -> FROM fellowship_candidate WHERE fellowship_candidate.Id = 1002;
+------------+-----------+------------+-----------------+
| First_Name | Last_Name | Hired_Date | Completed_Weeks |
+------------+-----------+------------+-----------------+
| Sakshi     | Jadhav    | 2024-05-12 |               9 |
+------------+-----------+------------+-----------------+
1 row in set (0.03 sec)



-- find joining date of candidate if candidate id is 4 --
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name,fellowship_candidate.Hired_Date FROM fellowship_candidate
    -> WHERE fellowship_candidate.Id = 1004;
+------------+-----------+------------+
| First_Name | Last_Name | Hired_Date |
+------------+-----------+------------+
| Vedant     | Gujarati  | 2023-06-14 |
+------------+-----------+------------+
1 row in set (0.00 sec)


-- how many week remaining of candidate in the bridglabz from today if candidate id is 5 -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name,FLOOR(DATEDIFF(CURDATE(),DATE_ADD(fellowship_candidate.Hired_Date,INTERVAL 3 MONTH)/7)) AS Remaining_Weeks
    -> FROM fellowship_candidate WHERE fellowship_candidate.Id = 1005;
+------------+-----------+-----------------+
| First_Name | Last_Name | Remaining_Weeks |
+------------+-----------+-----------------+
| Vaibhav    | Kumbhar   |            NULL |
+------------+-----------+-----------------+
1 row in set, 1 warning (0.00 sec)




-- how many days remaining of candidate in the bridgelabz from today if candidate is is 6 -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name,DATEDIFF(DATE_ADD(fellowship_candidate.Hired_Date,INTERVAL 3 MONTH),CURDATE()) AS Remaining_Days
    -> FROM fellowship_candidate WHERE fellowship_candidate.Id = 1006;
+------------+-----------+----------------+
| First_Name | Last_Name | Remaining_Days |
+------------+-----------+----------------+
| Sayali     | Matale    |           -105 |
+------------+-----------+----------------+
1 row in set (0.00 sec)



-- find candidates which is deployed -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name FROM fellowship_candidate
    -> JOIN company_requirement ON fellowship_candidate.Creator_User = company_requirement.Creator_User
    -> JOIN candidate_stack_assignment ON fellowship_candidate.Creator_User = candidate_stack_assignment.Creator_User
    -> WHERE candidate_stack_assignment.Complete_Date > company_requirement.Requested_Month;
+------------+-----------+
| First_Name | Last_Name |
+------------+-----------+
| Sakshi     | Jadhav    |
| Vedant     | Gujarati  |
| Vaibhav    | Kumbhar   |
| Akash      | Patil     |
| Pranali    | Deware    |
| Tushar     | Jadhav    |
| Saket      | Patil     |
+------------+-----------+
7 rows in set (0.03 sec)




-- find name and other details and name of company which is assign to condidate -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name,company.* FROM fellowship_candidate
    -> JOIN company ON fellowship_candidate.Creator_User = company.Creator_User;
+------------+------------+-----+---------------------------------------------+----------------------------------------------------------------------+-------------+--------+---------------------+--------------+
| First_Name | Last_Name  | Id  | Name                                        | Address                                                              | Location    | Status | Creator_Stamp       | Creator_User |
+------------+------------+-----+---------------------------------------------+----------------------------------------------------------------------+-------------+--------+---------------------+--------------+
| Anjali     | Patil      | 101 | QualityKiosk Technologies                   | C Wing, Rupa Solitaire, Sector-1, Millennium Business Park           | Navi Mumbai | Active | 2024-07-15 17:24:41 |            1 |
| Sakshi     | Jadhav     | 102 | Accenture                                   | 1st, 2nd, 3rd, & 4th Office Level, Building No. 02 Mindspace         | Navi Mumbai | Active | 2024-07-15 17:24:41 |            2 |
| Sanket     | Kalambaste | 103 | ContractPod Solutions Pvt. Ltd              | 2nd Floor, Raheja Platinum, WeWork India, Road, Sag Baug, Marol      | Mumbai      | Active | 2024-07-15 17:24:41 |            3 |
| Vedant     | Gujarati   | 104 | Amazon Web Services India Private Limited   | 1th Floor, Godrej One, Pirojshanagar, Vikhroli                       | Mumbai      | Active | 2024-07-15 17:24:41 |            4 |
| Vaibhav    | Kumbhar    | 105 | Amdocs DVCI                                 | Tower 12, Magarpatta Inner Circle, Cybercity, Magarpatta, Hadapsar   | Pune        | Active | 2024-07-15 17:24:41 |            5 |
| Sushmita   | Pawar      | 106 | Jet2 Travel Technologies Pvt. Ltd.          | 16th floor, Jet2 Travel Technologies Pvt. Ltd, Viman Nagar           | Pune        | Active | 2024-07-15 17:24:41 |            7 |
| Akash      | Patil      | 107 | Capgemini Technology Services India Limited | M6, Capgemini Knowledge Park, Thane - Belapur Rd, Airoli             | Navi Mumbai | Active | 2024-07-15 17:24:41 |            9 |
| Pranali    | Deware     | 108 | Zeus Learning                               | Tower B, Peninsula Business Park, Ganapatrao Kadam Marg, Lower Parel | Mumbai      | Active | 2024-07-15 17:24:41 |           10 |
| Tushar     | Jadhav     | 109 | Tata Consultancy Services                   | TCS House, Raveline Street, Fort                                     | Mumbai      | Active | 2024-07-15 17:24:41 |           11 |
| Saket      | Patil      | 110 | Infosys Limited                             | Electronics City, Hosur Road                                         | Bengaluru   | Active | 2024-07-15 17:24:41 |           12 |
+------------+------------+-----+---------------------------------------------+----------------------------------------------------------------------+-------------+--------+---------------------+--------------+
10 rows in set (0.00 sec)






-- find all condidate and mentors which is related to lab= banglore/mumbai/pune -- 
mysql> SELECT fellowship_candidate.First_Name,fellowship_candidate.Last_Name,mentor.Name,lab.Location FROM fellowship_candidate
    -> JOIN mentor ON fellowship_candidate.Creator_User = mentor.Creator_User
    -> JOIN lab ON fellowship_candidate.Creator_User = lab.Creator_User
    -> WHERE lab.Location IN ("Mumbai","Pune","Bengalore");
+------------+------------+-----------+-----------+
| First_Name | Last_Name  | Name      | Location  |
+------------+------------+-----------+-----------+
| Anjali     | Patil      | Sunil     | Mumbai    |
| Sakshi     | Jadhav     | Venkat    | Mumbai    |
| Sanket     | Kalambaste | Pooja     | Pune      |
| Vedant     | Gujarati   | Aishwarya | Pune      |
| Vaibhav    | Kumbhar    | Gunjan    | Bengalore |
| Sushmita   | Pawar      | Nagendra  | Bengalore |
| Akash      | Patil      | Roshni    | Mumbai    |
| Pranali    | Deware     | Sudhakar  | Pune      |
+------------+------------+-----------+-----------+
8 rows in set (0.00 sec)




-- find buddy mentors and ideation mentor and which technology assign to perticular candidate if candidate id is 6 --
mysql> SELECT fellowship_candidate.First_Name,mentor.Name,mentor.Mentor_Type,tech_stack.Tech_Name FROM fellowship_candidate
    -> JOIN mentor ON fellowship_candidate.Creator_User = mentor.Creator_User
    -> JOIN tech_stack ON fellowship_candidate.Creator_User = tech_stack.Creator_User
    -> WHERE fellowship_candidate.Id = 1006;
Empty set (0.00 sec)
